package Presentacion.PatronoVentana;

import Presentacion.PatronoVentana.VentanaPatrono;
import Entidades.Empleados;
import LogicaNegocio.LogicaEmpleados;
import java.io.IOException;
import javax.swing.table.DefaultTableModel;
import Servicios.ServicioEmpleado;
import javax.swing.JOptionPane; 
import Exepciones.CustomException;

/**
 *
 * @author Empresaurio50
 */
public class VentanaPlantilla extends javax.swing.JFrame {

    private Empleados objEmpleados = new Empleados();
    private ServicioEmpleado servicioEmpleado;
    private DefaultTableModel modeloTablaEmpleados;
    private VentanaPatrono ventanaPatrono;

    /**
     *
     * @throws IOException
     *
    /**
     * Creates new form VentanaLogin
     */
    public VentanaPlantilla() throws IOException{
        servicioEmpleado = new LogicaEmpleados();
        initComponents();
        CargarEmpleados();

    }
    /**
     * Carga una lista de empleados en la tabla desde la base de datos.
     *
     * Este método se conecta a la base de datos, ejecuta una consulta SQL para
     * obtener los datos de los empleados y los muestra en la tabla
     * `tblEmpleados`. La tabla tiene las siguientes columnas: - ID:
     * Identificador único del empleado (entero). - Nombre: Nombre completo del
     * empleado (cadena). - Contraseña: Contraseña del empleado (cadena). -
     * Correo: Correo electrónico del empleado (cadena).
     *
     *
     */
    public void CargarEmpleados() {

        modeloTablaEmpleados = new DefaultTableModel();

        modeloTablaEmpleados.addColumn("ID");
        modeloTablaEmpleados.addColumn("Nombre");
        modeloTablaEmpleados.addColumn("Correo");
        modeloTablaEmpleados.addColumn("Salario Bruto");

        listarEmpleados();

    }

    /**
     * Carga una lista de empleados en la tabla desde la base de datos.
     *
     * Este método obtiene una lista de empleados desde la base de datos y
     * muestra los resultados en la tabla `tblEmpleados`. La lista de empleados
     * se devuelve como una lista de arreglos de cadenas, donde cada arreglo
     * contiene los siguientes datos:
     * - Índice 0: ID del empleado 
     * - Índice 1: Nombre del empleado 
     * - Índice 2: Password del empleado 
     * - Indice 3: Correodel empleado

     */
    public void listarEmpleados() {

        objEmpleados = new Empleados();

        try {
            servicioEmpleado.leerEmpleado(objEmpleados);

            for (String[] lista : objEmpleados.getEmpleadosLista()) {
                modeloTablaEmpleados.addRow(new Object[]{lista[0], lista[1], lista[3], lista[4]});
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        tblEmpleados.setModel(modeloTablaEmpleados);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblSalarioBruto = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        txtSalarioBruto = new javax.swing.JTextField();
        txtNombreAgregar = new javax.swing.JTextField();
        txtPasswordAgregar = new javax.swing.JPasswordField();
        lbl2Correo = new javax.swing.JLabel();
        bttVolverPrincipal = new javax.swing.JButton();
        lbl2Contra = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmpleados = new javax.swing.JTable();
        txtCorreoAgregar = new javax.swing.JTextField();
        bttAgregar = new javax.swing.JButton();
        bttActualizar = new javax.swing.JButton();
        bttEliminar = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JLabel();
        lblAgregarTitulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSalarioBruto.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        lblSalarioBruto.setText("Salario Bruto");
        jPanel1.add(lblSalarioBruto, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, -1, -1));

        lblNombre.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        lblNombre.setText("Nombre");
        jPanel1.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));
        jPanel1.add(txtSalarioBruto, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 250, 110, -1));
        jPanel1.add(txtNombreAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 103, -1));
        jPanel1.add(txtPasswordAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 110, -1));

        lbl2Correo.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        lbl2Correo.setText("Correo");
        jPanel1.add(lbl2Correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, -1, -1));

        bttVolverPrincipal.setBackground(new java.awt.Color(252, 252, 252));
        bttVolverPrincipal.setText("Volver Atrás");
        bttVolverPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttVolverPrincipalActionPerformed(evt);
            }
        });
        jPanel1.add(bttVolverPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, -1, -1));

        lbl2Contra.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        lbl2Contra.setText("Contraseña");
        jPanel1.add(lbl2Contra, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, 20));

        tblEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmpleados);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 370, 380));
        jPanel1.add(txtCorreoAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 106, -1));

        bttAgregar.setBackground(new java.awt.Color(252, 252, 252));
        bttAgregar.setText("Agregar");
        bttAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(bttAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        bttActualizar.setBackground(new java.awt.Color(252, 252, 252));
        bttActualizar.setText("Actualizar");
        bttActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(bttActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, -1, -1));

        bttEliminar.setBackground(new java.awt.Color(252, 252, 252));
        bttEliminar.setText("Eliminar");
        bttEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(bttEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 80, -1));

        lblId.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        lblId.setText("ID");
        jPanel1.add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, -1, -1));

        txtId.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        txtId.setText("0");
        jPanel1.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, -1, -1));

        lblAgregarTitulo.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        lblAgregarTitulo.setText("Gestionar Planilla");
        jPanel1.add(lblAgregarTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/prueba 2.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondaxo de todo lado.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 0, 540, 430));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Maneja el evento de clic en el botón de agregar un nuevo empleado.
     *
     * Este método se encarga de: 1. Crear un nuevo objeto `Empleados` para
     * representar al nuevo empleado. 2. Obtener los datos del nuevo empleado
     * desde los campos de texto de la interfaz. 3. Intentar agregar al nuevo
     * empleado a la base de datos utilizando el método `agregarEmpleado` del
     * servicio de empleados. 4. Recargar la tabla de empleados para mostrar el
     * nuevo empleado agregado.
     *
     * @param evt El evento de clic en el botón.
     */

    private void bttAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttAgregarActionPerformed

        
        
        
        
        try {
            objEmpleados = new Empleados();
            servicioEmpleado = new LogicaEmpleados();

            objEmpleados.setNombre(txtNombreAgregar.getText());
            objEmpleados.setCorreo(txtCorreoAgregar.getText());
            objEmpleados.setPassword(txtPasswordAgregar.getText());
            objEmpleados.setSalarioBruto(Double.parseDouble(txtSalarioBruto.getText()));
            
            servicioEmpleado.agregarEmpleado(objEmpleados);
            
        }catch (CustomException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null,"No ingresó un número válido. Solo se permiten números en el apartado salario bruto.");
        }
        catch(IOException e){
            JOptionPane.showMessageDialog(null, e);
            
        }
        CargarEmpleados();
    }//GEN-LAST:event_bttAgregarActionPerformed

    /**
     * Maneja el evento de clic en el botón de actualizar un empleado.
     *
     * Este método se encarga de: 1. Crear un nuevo objeto `Empleados` para
     * representar al empleado a actualizar. 2. Obtener los nuevos datos del
     * empleado desde los campos de texto de la interfaz. 3. Intentar actualizar
     * al empleado en la base de datos utilizando el método `actualizarEmpleado`
     * del servicio de empleados. 4. Recargar la tabla de empleados para
     * reflejar los cambios.
     *
     * @param evt El evento de clic en el botón.
     * @autor Samuel Zamora
     */

    private void bttActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttActualizarActionPerformed

        objEmpleados = new Empleados(); // Crear una nueva instancia de Empleados.

        // Establecer los datos del empleado.
        objEmpleados.setId(Integer.parseInt(txtId.getText()));
        objEmpleados.setNombre(txtNombreAgregar.getText());
        objEmpleados.setCorreo(txtCorreoAgregar.getText());
        objEmpleados.setSalarioBruto(Double.parseDouble(txtSalarioBruto.getText()));
        

        // Verificar si se ha ingresado una nueva contraseña.
        if (!txtPasswordAgregar.getText().isEmpty()) {
            objEmpleados.setPassword(txtPasswordAgregar.getText());
        } else {
            try {
                servicioEmpleado.leerEmpleado(objEmpleados); // Leer los datos del empleado desde el servicio.
                String contrasena = null;
                // Buscar la contraseña actual del empleado en la lista.
                for (String[] fila : objEmpleados.getEmpleadosLista()) {
                    if (fila[0].equals(String.valueOf(objEmpleados.getId()))) {
                        contrasena = fila[2];
                        break;
                    }
                }
                // Establecer la contraseña encontrada o una cadena vacía si no se encontró.
                objEmpleados.setPassword(contrasena == null ? "" : contrasena);
            } catch (IOException ex) {
                // Mostrar un mensaje de error si ocurre una excepción de E/S.
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }

        try {
            servicioEmpleado.actualizarEmpleado(objEmpleados); // Actualizar los datos del empleado en el servicio
        }catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null,e);
        } 
        
        catch (CustomException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        catch(IOException e){
            JOptionPane.showMessageDialog(null, e);
            
        }

        CargarEmpleados(); // Recargar la tabla de empleados.

    }//GEN-LAST:event_bttActualizarActionPerformed

    /**
     * Maneja el evento de clic en el botón de eliminar un empleado.
     *
     * Este método se encarga de: 1. Crear un nuevo objeto `Empleados` para
     * representar al empleado a eliminar. 2. Obtener el ID del empleado a
     * eliminar desde el campo de texto `txtId`. 3. Intentar eliminar al
     * empleado utilizando el método `eliminarEmpleado` del servicio de
     * empleados. 4. Mostrar un mensaje de error si ocurre alguna excepción
     * durante el proceso de eliminación. 5. Recargar la tabla de empleados para
     * reflejar los cambios.
     *
     * @param evt El evento de clic en el botón.
     */
    private void bttEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttEliminarActionPerformed

        objEmpleados = new Empleados();

        objEmpleados.setId(Integer.parseInt(txtId.getText()));

        try {
            servicioEmpleado.eliminarEmpleado(objEmpleados);

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e);
        }

        CargarEmpleados();

    }//GEN-LAST:event_bttEliminarActionPerformed

    /**
     * Maneja el evento de clic en una fila de la tabla de empleados.
     *
     * Cuando se hace clic en una fila de la tabla `tblEmpleados`, este método
     * obtiene los datos de la fila seleccionada y los muestra en los campos de
     * texto correspondientes para su edición. La tabla `tblEmpleados` tiene la
     * siguiente estructura: 
     * - Columna 0: ID del empleado 
     * - Columna 1: Nombre del empleado 
     * - Columna 2: Contraseña del empleado 
     * - Columna 3: Correo electrónico del empleado
     *
     * @param evt El evento de clic en la tabla.
     */

    private void tblEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpleadosMouseClicked

        int fila = tblEmpleados.getSelectedRow();// Obtiene la fila seleccionada en la tabla.

        // Establece los datos de la fila seleccionada en los campos de texto.
        txtId.setText(tblEmpleados.getValueAt(fila, 0).toString());
        txtNombreAgregar.setText(tblEmpleados.getValueAt(fila, 1).toString());
        txtCorreoAgregar.setText(tblEmpleados.getValueAt(fila, 2).toString());
        txtSalarioBruto.setText(tblEmpleados.getValueAt(fila, 3).toString());
    }//GEN-LAST:event_tblEmpleadosMouseClicked

    
    /** 
     * Acción a realizar cuando se pulsa el botón de volver al principal. 
     * Este método se encarga de crear y mostrar la ventana del patrono, * y ocultar la ventana actual. 
     * @param evt El evento de acción que disparó este método. 
     */
    private void bttVolverPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttVolverPrincipalActionPerformed
        
        ventanaPatrono = new VentanaPatrono(); // Crea una nueva instancia de la ventana del patrono.
        
        
        ventanaPatrono.setVisible(true); // Hace visible la ventana del patrono.
        ventanaPatrono.setLocationRelativeTo(null);
        this.setVisible(false);// Oculta la ventana actual.
    }//GEN-LAST:event_bttVolverPrincipalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPlantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPlantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPlantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPlantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new VentanaPlantilla().setVisible(true);

                } catch (Exception e) {
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttActualizar;
    private javax.swing.JButton bttAgregar;
    private javax.swing.JButton bttEliminar;
    private javax.swing.JButton bttVolverPrincipal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl2Contra;
    private javax.swing.JLabel lbl2Correo;
    private javax.swing.JLabel lblAgregarTitulo;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblSalarioBruto;
    private javax.swing.JTable tblEmpleados;
    private javax.swing.JTextField txtCorreoAgregar;
    private javax.swing.JLabel txtId;
    private javax.swing.JTextField txtNombreAgregar;
    private javax.swing.JPasswordField txtPasswordAgregar;
    private javax.swing.JTextField txtSalarioBruto;
    // End of variables declaration//GEN-END:variables
}
